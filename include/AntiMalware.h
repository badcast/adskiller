#pragma once

#include <QLabel>
#include <QListView>
#include <QProgressBar>
#include <QPushButton>

#include "begin.h"
#include "extension.h"

class AdsKillerService : public Service
{
private:
    QListView * processLogStatus;
    QLabel * malwareStatusText0;
    QLabel * deviceLabelName;
    QProgressBar * processBarStatus;
    QPushButton * pushButtonReRun;

    void cirlceMalwareState(bool success);
    void cirlceMalwareStateReset();

public:
    AdsKillerService(QObject *parent = nullptr) : Service(DeviceConnectType::ADB, parent){}

    void setDevice(const AdbDevice& adbDevice) override;

    bool canStart() override;
    bool isStarted() override;
    bool isFinish() override;
    bool start() override;
    void stop() override;
    void reset() override;

};

extern QString malwareReadHeader();
extern std::pair<QStringList, int> malwareReadLog();
extern MalwareStatus malwareStatus();
extern void malwareStart(const QString& deviceSerial);
extern void malwareKill();
extern bool malwareClean();
extern void malwareWriteVal(int userValue);
extern bool malwareRequireUser();
